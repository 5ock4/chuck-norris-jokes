{"version":3,"sources":["jokes/slices/joke.js","jokes/slices/category.js","jokes/slices/searchText.js","jokes/services/chuckNorrisAPI.js","jokes/components/JokeCard.js","jokes/slices/categories.js","jokes/components/JokeCategories.js","jokes/components/JokeForm.js","shared/components/UIElements/ImgContainer.js","shared/assets/chuck.png","jokes/pages/Jokes.js","shared/themes/theme.js","App.js","shared/rootReducer.js","index.js"],"names":["jokesSlice","createSlice","name","initialState","loading","hasErrors","joke","reducers","setJokesLoading","state","setJokesSuccess","payload","setJokesFailure","actions","jokesSelector","getRandomJoke","fetchJoke","category","searchText","dispatch","a","data","categorySlice","setCategory","action","categorySelector","searchTextSlice","textTooShort","setSearchText","length","searchTextSelector","path","axios","get","response","total","undefined","value","randInt","Math","floor","random","result","fetchCategories","process","useStyles","makeStyles","root","minWidth","cursor","JokeCard","classes","useState","elevation","setElevation","useDispatch","useSelector","useEffect","Paper","onMouseMove","onMouseOut","className","onClick","Card","CardContent","CircularProgress","Typography","variant","align","categoriesSlice","categories","setCategories","setCategoriesSuccess","setCategoriesFailure","categoriesSelector","theme","display","justifyContent","flexWrap","margin","spacing","listStyle","chip","JokeCategories","map","index","Chip","label","handleClick","color","width","height","JokeForm","prevSearchTextRef","useRef","current","prevSearchText","TextField","error","helperText","id","onChange","e","target","breakpoints","up","container","marginRight","ImgContainer","props","src","image","alt","boxPos","alignItems","padding","Jokes","Fragment","Box","chuckImg","createMuiTheme","palette","primary","main","secondary","overrides","MuiCssBaseline","html","body","textAlign","backgroundColor","userSelect","App","ThemeProvider","CssBaseline","Container","maxWidth","my","rootReducer","combineReducers","jokeReducer","categoriesReducer","categoryReducer","searchTextReducer","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56701b5b.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\n\nexport const initialState = {\n  loading: false,\n  hasErrors: false,\n  joke: null,\n}\n\nconst jokesSlice = createSlice({\n  name: \"jokes\",\n  initialState,\n  reducers: {\n    setJokesLoading: (state) => {\n      state.loading = true\n    },\n    setJokesSuccess: (state, { payload }) => {\n      state.joke = payload\n      state.loading = false\n      state.hasErrors = false\n    },\n    setJokesFailure: (state) => {\n      state.loading = false\n      state.hasErrors = true\n    },\n  },\n})\n\n// Actions generated from the slice\nexport const {\n  setJokesLoading,\n  setJokesSuccess,\n  setJokesFailure,\n} = jokesSlice.actions\n\n// Selector\nexport const jokesSelector = (state) => state.joke\n\n// Reducer\nexport default jokesSlice.reducer\n\n// Asynchronous thunk action\nexport const getRandomJoke = (fetchJoke, category, searchText) => {\n  return async (dispatch) => {\n    dispatch(setJokesLoading())\n\n    try {\n      const data = await fetchJoke(category, searchText)\n      dispatch(setJokesSuccess(data))\n    } catch (error) {\n      dispatch(setJokesFailure())\n    }\n  }\n}\n","import { createSlice } from \"@reduxjs/toolkit\"\n\nexport const initialState = {\n  category: null,\n}\n\nconst categorySlice = createSlice({\n  name: \"category\",\n  initialState,\n  reducers: {\n    setCategory: (state, action) => {\n      state.category = action.payload\n    },\n  },\n})\n\n// Action generated from the slice\nexport const { setCategory } = categorySlice.actions\n\n// Selector\nexport const categorySelector = (state) => state.category\n\n// Reducer\nexport default categorySlice.reducer\n","import { createSlice } from \"@reduxjs/toolkit\"\n\nexport const initialState = {\n  searchText: \"\",\n  textTooShort: false,\n}\n\nconst searchTextSlice = createSlice({\n  name: \"searchText\",\n  initialState,\n  reducers: {\n    setSearchText: (state, action) => {\n      state.searchText = action.payload\n      if (action.payload.length > 0 && action.payload.length < 3) {\n        state.textTooShort = true\n      } else {\n        state.textTooShort = false\n      }\n    },\n  },\n})\n\n// Action generated from the slice\nexport const { setSearchText } = searchTextSlice.actions\n\n// Selector\nexport const searchTextSelector = (state) => state.searchText\n\n// Reducer\nexport default searchTextSlice.reducer\n","import axios from \"axios\"\n\nconst CHUCK_NORRIS_JOKES_API = \"https://api.chucknorris.io/jokes\"\n\nexport const fetchJoke = async (category, searchText) => {\n  let path\n\n  if (searchText != null) {\n    path = `/search?query=${searchText}`\n  } else if (category == null) {\n    path = \"/random\"\n  } else {\n    path = `/random?category=${category}`\n  }\n\n  const response = await axios.get(CHUCK_NORRIS_JOKES_API + path)\n\n  if (response.data.total === 0) {\n    return `No joke with phrase \"${searchText}\" found.`\n  }\n\n  if (response.data.value === undefined) {\n    const randInt = Math.floor(Math.random() * response.data.total)\n    return response.data.result[randInt].value\n  }\n\n  return response.data.value\n}\n\nexport const fetchCategories = async () => {\n  const response = await axios.get(\n    process.env.REACT_APP_CHUCK_NORRIS_JOKES_API + \"/categories\"\n  )\n\n  return response.data\n}\n","import React, { useState, useEffect } from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { Paper, CircularProgress, Card, CardContent } from \"@material-ui/core\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { useDispatch, useSelector } from \"react-redux\"\n\nimport { getRandomJoke, jokesSelector } from \"../slices/joke\"\nimport { categorySelector } from \"../slices/category\"\nimport { searchTextSelector } from \"../slices/searchText\"\nimport { fetchJoke } from \"../services/chuckNorrisAPI\"\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    \"&:hover\": {\n      cursor: \"pointer\",\n    },\n  },\n})\n\nconst JokeCard = () => {\n  const classes = useStyles()\n  const [elevation, setElevation] = useState(0)\n  const dispatch = useDispatch()\n  const { joke, loading, hasErrors } = useSelector(jokesSelector)\n  const { category } = useSelector(categorySelector)\n  const { searchText } = useSelector(searchTextSelector)\n\n  useEffect(() => {\n    dispatch(getRandomJoke(fetchJoke))\n  }, [dispatch])\n\n  const handleOnMouseMove = () => {\n    setElevation(5)\n  }\n\n  const handleOnMouseOut = () => {\n    setElevation(0)\n  }\n\n  const handleOnClick = () => {\n    if (searchText.length !== 0) {\n      dispatch(getRandomJoke(fetchJoke, category, searchText))\n    } else {\n      dispatch(getRandomJoke(fetchJoke, category))\n    }\n  }\n\n  return (\n    <Paper\n      elevation={elevation}\n      onMouseMove={handleOnMouseMove}\n      onMouseOut={handleOnMouseOut}\n      className={classes.root}\n      onClick={handleOnClick}\n    >\n      <Card>\n        <CardContent>\n          {loading && <CircularProgress />}\n          {!loading && !hasErrors && (\n            <Typography variant=\"body1\" align=\"left\">\n              {joke}\n            </Typography>\n          )}\n          {hasErrors && (\n            <Typography variant=\"body1\" align=\"left\">\n              No joke with phrase \"<i>{searchText}</i>\" found.\n            </Typography>\n          )}\n        </CardContent>\n      </Card>\n    </Paper>\n  )\n}\n\nexport default JokeCard\n","import { createSlice } from \"@reduxjs/toolkit\"\n\nexport const initialState = {\n  loading: false,\n  hasErrors: false,\n  categories: [],\n}\n\nconst categoriesSlice = createSlice({\n  name: \"categories\",\n  initialState,\n  reducers: {\n    setCategories: (state) => {\n      state.loading = true\n    },\n    setCategoriesSuccess: (state, { payload }) => {\n      state.categories = payload\n      state.loading = false\n      state.hasErrors = false\n    },\n    setCategoriesFailure: (state) => {\n      state.loading = false\n      state.hasErrors = true\n    },\n  },\n})\n\n// Actions generated from the slice\nexport const {\n  setCategories,\n  setCategoriesSuccess,\n  setCategoriesFailure,\n} = categoriesSlice.actions\n\n// Selector\nexport const categoriesSelector = (state) => state.categories\n\n// Reducer\nexport default categoriesSlice.reducer\n\n// Asynchronous thunk action\nexport function getCategories(fetchCategories) {\n  return async (dispatch) => {\n    dispatch(setCategories())\n\n    try {\n      const data = await fetchCategories()\n      dispatch(setCategoriesSuccess(data))\n    } catch (error) {\n      dispatch(setCategoriesFailure())\n    }\n  }\n}\n","import { React, useEffect } from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { Chip, CircularProgress, Typography } from \"@material-ui/core\"\nimport { useDispatch, useSelector } from \"react-redux\"\n\nimport { getRandomJoke } from \"../slices/joke\"\nimport { getCategories, categoriesSelector } from \"../slices/categories\"\nimport { setCategory, categorySelector } from \"../slices/category\"\nimport { fetchJoke } from \"../services/chuckNorrisAPI\"\nimport { fetchCategories } from \"../services/chuckNorrisAPI\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      margin: theme.spacing(0.5),\n    },\n    listStyle: \"none\",\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n  },\n}))\n\nconst JokeCategories = () => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const { categories, loading, hasErrors } = useSelector(categoriesSelector)\n  const { category } = useSelector(categorySelector)\n\n  useEffect(() => {\n    dispatch(getCategories(fetchCategories))\n  }, [dispatch])\n\n  const handleClick = (data) => {\n    if (category === data) {\n      dispatch(setCategory(null))\n      dispatch(getRandomJoke(fetchJoke, null))\n    } else {\n      dispatch(setCategory(data))\n      dispatch(getRandomJoke(fetchJoke, data))\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      {loading && <CircularProgress />}\n      {!loading &&\n        !hasErrors &&\n        categories.map((data, index) => {\n          return (\n            <li key={index}>\n              <Chip\n                label={data}\n                onClick={() => handleClick(data)}\n                color={data === category ? \"primary\" : \"secondary\"}\n                className={classes.chip}\n              />\n            </li>\n          )\n        })}\n      {hasErrors && (\n        <Typography variant=\"body1\" align=\"left\">\n          No categories found.\n        </Typography>\n      )}\n    </div>\n  )\n}\n\nexport default JokeCategories\n","import React, { useEffect, useRef } from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport TextField from \"@material-ui/core/TextField\"\nimport { useDispatch, useSelector } from \"react-redux\"\n\nimport { getRandomJoke } from \"../slices/joke\"\nimport { setSearchText, searchTextSelector } from \"../slices/searchText\"\nimport { setCategory, categorySelector } from \"../slices/category\"\nimport { fetchJoke } from \"../services/chuckNorrisAPI\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(3),\n      width: theme.spacing(25),\n      height: theme.spacing(8),\n    },\n  },\n}))\n\nconst JokeForm = () => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const { searchText, textTooShort } = useSelector(searchTextSelector)\n  const { category } = useSelector(categorySelector)\n\n  const handleOnChange = (e) => {\n    dispatch(setSearchText(e.target.value))\n    if (e.target.value.length > 0) {\n      dispatch(setCategory(null))\n    }\n  }\n\n  const prevSearchTextRef = useRef()\n  useEffect(() => {\n    prevSearchTextRef.current = searchText\n  })\n  const prevSearchText = prevSearchTextRef.current\n\n  useEffect(() => {\n    if (\n      searchText.length !== 0 &&\n      prevSearchText.length !== 0 &&\n      category !== null\n    ) {\n      dispatch(setSearchText(\"\"))\n    } else if (!textTooShort && searchText.length !== 0) {\n      dispatch(getRandomJoke(fetchJoke, null, searchText))\n    }\n  })\n\n  return (\n    <div className={classes.root}>\n      <TextField\n        value={searchText}\n        error={textTooShort}\n        helperText={textTooShort ? \"Phrase is too short.\" : \"\"}\n        id=\"standard-basic\"\n        label=\"Find joke with phrase\"\n        onChange={handleOnChange}\n      />\n    </div>\n  )\n}\n\nexport default JokeForm\n","import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles((theme) => ({\n  [theme.breakpoints.up(\"sm\")]: {\n    container: {\n      marginRight: theme.spacing(4),\n    },\n  },\n}))\n\nconst ImgContainer = (props) => {\n  const classes = useStyles()\n\n  return (\n    <img\n      className={classes.container}\n      src={props.image}\n      alt=\"Chuck does not exist.\"\n    />\n  )\n}\n\nexport default ImgContainer\n","export default __webpack_public_path__ + \"static/media/chuck.e03202fc.png\";","import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { Box } from \"@material-ui/core\"\n\nimport JokeCard from \"../components/JokeCard\"\nimport JokeCategories from \"../components/JokeCategories\"\nimport JokeForm from \"../components/JokeForm\"\nimport ImgContainer from \"../../shared/components/UIElements/ImgContainer\"\nimport chuckImg from \"../../shared/assets/chuck.png\"\n\nconst useStyles = makeStyles((theme) => ({\n  boxPos: {\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      padding: \"20px\",\n    },\n  },\n}))\n\nconst Jokes = () => {\n  const classes = useStyles()\n\n  return (\n    <React.Fragment>\n      <Box className={classes.boxPos}>\n        <ImgContainer image={chuckImg} />\n        <JokeCard />\n      </Box>\n      <JokeForm />\n      <JokeCategories />\n    </React.Fragment>\n  )\n}\n\nexport default Jokes\n","import { createMuiTheme } from \"@material-ui/core/styles\"\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#004d40\",\n    },\n    secondary: {\n      main: \"#26a69a\",\n    },\n  },\n  overrides: {\n    MuiCssBaseline: {\n      \"@global\": {\n        html: {\n          height: \"100%\",\n        },\n        body: {\n          textAlign: \"center\",\n          backgroundColor: \"#ededed\",\n        },\n        \"*\": {\n          userSelect: \"none\",\n        },\n      },\n    },\n  },\n})\n\nexport default theme\n","import { Box, Container } from \"@material-ui/core\"\nimport { ThemeProvider } from \"@material-ui/core/styles\"\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\n// import {Helmet} from 'react-helmet'\n\nimport Jokes from \"./jokes/pages/Jokes\"\nimport theme from \"./shared/themes/theme\"\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Container maxWidth=\"sm\">\n        <Box my={4}>\n          <Jokes />\n        </Box>\n      </Container>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","import { combineReducers } from \"redux\"\n\nimport jokeReducer from \"../jokes/slices/joke\"\nimport categoriesReducer from \"../jokes/slices/categories\"\nimport categoryReducer from \"../jokes/slices/category\"\nimport searchTextReducer from \"../jokes/slices/searchText\"\n\nconst rootReducer = combineReducers({\n  joke: jokeReducer,\n  categories: categoriesReducer,\n  category: categoryReducer,\n  searchText: searchTextReducer,\n})\n\nexport default rootReducer\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { configureStore } from \"@reduxjs/toolkit\"\nimport { Provider } from \"react-redux\"\n\nimport App from \"./App\"\nimport rootReducer from \"./shared/rootReducer\"\n\nconst store = configureStore({ reducer: rootReducer })\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}