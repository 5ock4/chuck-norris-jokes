{"version":3,"sources":["shared/util/utils.js","shared/slices/joke.js","shared/slices/category.js","shared/slices/searchText.js","jokes/components/JokeCard.js","shared/slices/categories.js","jokes/components/JokeCategories.js","jokes/components/JokeForm.js","shared/components/UIElements/ImgContainer.js","shared/assets/chuck.png","jokes/pages/Jokes.js","shared/themes/theme.js","App.js","shared/slices/index.js","index.js"],"names":["getPath","category","searchText","getData","response","undefined","data","value","console","log","total","randInt","Math","floor","random","result","jokesSlice","createSlice","name","initialState","loading","hasErrors","joke","reducers","setJokes","state","setJokesSuccess","payload","setJokesFailure","actions","jokesSelector","fetchRandomJoke","dispatch","a","axios","get","process","categorySlice","setCategory","action","categorySelector","searchTextSlice","textTooShort","setSearchText","length","searchTextSelector","useStyles","makeStyles","root","minWidth","cursor","JokeCard","classes","useState","elevation","setElevation","useDispatch","useSelector","useEffect","Paper","onMouseMove","onMouseOut","className","onClick","Card","CardContent","CircularProgress","Typography","variant","align","categoriesSlice","categories","setCategories","setCategoriesSuccess","setCategoriesFailure","categoriesSelector","theme","display","justifyContent","flexWrap","margin","spacing","listStyle","chip","JokeCategories","map","index","Chip","label","handleClick","color","width","height","JokeForm","props","noValidate","autoComplete","TextField","error","helperText","id","onChange","e","target","breakpoints","up","container","marginRight","ImgContainer","src","image","alt","boxPos","alignItems","padding","Jokes","Fragment","Box","chuckImg","createMuiTheme","palette","primary","main","secondary","overrides","MuiCssBaseline","html","body","textAlign","backgroundColor","App","ThemeProvider","CssBaseline","Container","maxWidth","my","rootReducer","combineReducers","jokeReducer","categoriesReducer","categoryReducer","searchTextReducer","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kVAAaA,EAAU,SAACC,EAAUC,GAWhC,OARkB,MAAdA,EACE,wBAAoBA,GACH,MAAZD,EACF,UAEH,2BAAuBA,IAMlBE,EAAU,SAACC,GACtB,QAA4BC,IAAxBD,EAASE,KAAKC,MAAqB,CACrCC,QAAQC,IAAIL,EAASE,KAAKI,OAC1B,IAAMC,EAAUC,KAAKC,MAAMD,KAAKE,SAAWV,EAASE,KAAKI,OAEzD,OADAF,QAAQC,IAAIE,GACLP,EAASE,KAAKS,OAAOJ,GAASJ,MAGvC,OAAOH,EAASE,KAAKC,OCXjBS,EAAaC,YAAY,CAC7BC,KAAM,QACNC,aAR0B,CAC1BC,SAAS,EACTC,WAAW,EACXC,KAAM,MAMNC,SAAU,CACRC,SAAU,SAACC,GACTA,EAAML,SAAU,GAElBM,gBAAiB,SAACD,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QACzBF,EAAMH,KAAOK,EACbF,EAAML,SAAU,EAChBK,EAAMJ,WAAY,GAEpBO,gBAAiB,SAACH,GAChBA,EAAML,SAAU,EAChBK,EAAMJ,WAAY,M,EAUpBL,EAAWa,QAHbL,E,EAAAA,SACAE,E,EAAAA,gBACAE,E,EAAAA,gBAIWE,EAAgB,SAACL,GAAD,OAAWA,EAAMH,MAG/BN,IAAf,QAGae,EAAkB,SAAC9B,EAAUC,GACxC,8CAAO,WAAO8B,GAAP,iBAAAC,EAAA,6DACLD,EAASR,KADJ,kBAIoBU,IAAMC,IAC3BC,mCACEpC,EAAQC,EAAUC,IANnB,OAIGE,EAJH,OAQHI,QAAQC,IAAIL,GACNE,EAAOH,EAAQC,GACrBI,QAAQC,IAAI,mBACZuB,EAASN,EAAgBpB,IAXtB,kDAaHE,QAAQC,IAAI,wBACZD,QAAQC,IAAR,MACAuB,EAASJ,KAfN,0DAAP,uDCvCIS,EAAgBpB,YAAY,CAChCC,KAAM,WACNC,aAN0B,CAC1BlB,SAAU,MAMVsB,SAAU,CACRe,YAAa,SAACb,EAAOc,GACnBd,EAAMxB,SAAWsC,EAAOZ,YAMfW,EAAgBD,EAAcR,QAA9BS,YAGFE,EAAmB,SAACf,GAAD,OAAWA,EAAMxB,UAGlCoC,IAAf,QChBMI,EAAkBxB,YAAY,CAClCC,KAAM,aACNC,aAP0B,CAC1BjB,WAAY,GACZwC,cAAc,GAMdnB,SAAU,CACRoB,cAAe,SAAClB,EAAOc,GACrBd,EAAMvB,WAAaqC,EAAOZ,QACtBY,EAAOZ,QAAQiB,OAAS,GAAKL,EAAOZ,QAAQiB,OAAS,EACvDnB,EAAMiB,cAAe,EAErBjB,EAAMiB,cAAe,MAOdC,EAAkBF,EAAgBZ,QAAlCc,cAGFE,EAAqB,SAACpB,GAAD,OAAWA,EAAMvB,YAGpCuC,IAAf,QCnBMK,EAAYC,YAAW,CAC3BC,KAAM,CACJC,SAAU,IACV,UAAW,CACTC,OAAQ,cA6DCC,EAxDE,WACf,IAAMC,EAAUN,IADK,EAEaO,mBAAS,GAFtB,mBAEdC,EAFc,KAEHC,EAFG,KAGfvB,EAAWwB,cAHI,EAIgBC,YAAY3B,GAAzCR,EAJa,EAIbA,KAAMF,EAJO,EAIPA,QAASC,EAJF,EAIEA,UACfpB,EAAawD,YAAYjB,GAAzBvC,SACAC,EAAeuD,YAAYZ,GAA3B3C,WAERwD,qBAAU,WACR1B,EAASD,OACR,CAACC,IAmBJ,OACE,cAAC2B,EAAA,EAAD,CACEL,UAAWA,EACXM,YApBsB,WACxBL,EAAa,IAoBXM,WAjBqB,WACvBN,EAAa,IAiBXO,UAAWV,EAAQJ,KACnBe,QAfkB,WACpBvD,QAAQC,IAAI,kBACc,IAAtBP,EAAW0C,OACbZ,EAASD,EAAgB9B,EAAUC,IAEnC8B,EAASD,EAAgB9B,KAK3B,SAOE,cAAC+D,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACG7C,GAAW,cAAC8C,EAAA,EAAD,KACV9C,IAAYC,GACZ,cAAC8C,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,OAAlC,SACG/C,IAGJD,GACC,eAAC8C,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,OAAlC,kCACuB,4BAAInE,IAD3B,sB,SCxDNoE,EAAkBrD,YAAY,CAClCC,KAAM,aACNC,aAR0B,CAC1BC,SAAS,EACTC,WAAW,EACXkD,WAAY,IAMZhD,SAAU,CACRiD,cAAe,SAAC/C,GACdA,EAAML,SAAU,GAElBqD,qBAAsB,SAAChD,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QAC9BF,EAAM8C,WAAa5C,EACnBF,EAAML,SAAU,EAChBK,EAAMJ,WAAY,GAEpBqD,qBAAsB,SAACjD,GACrBA,EAAML,SAAU,EAChBK,EAAMJ,WAAY,M,EAUpBiD,EAAgBzC,QAHlB2C,E,EAAAA,cACAC,E,EAAAA,qBACAC,E,EAAAA,qBAIWC,EAAqB,SAAClD,GAAD,OAAWA,EAAM8C,YAGpCD,KAAf,QC3BA,IAAMxB,GAAYC,aAAW,SAAC6B,GAAD,MAAY,CACvC5B,KAAM,CACJ6B,QAAS,OACTC,eAAgB,SAChBC,SAAU,OACV,QAAS,CACPC,OAAQJ,EAAMK,QAAQ,KAExBC,UAAW,QAEbC,KAAM,CACJH,OAAQJ,EAAMK,QAAQ,SAkDXG,GA9CQ,WACrB,IAAMhC,EAAUN,KACVd,EAAWwB,cAFU,EAGgBC,YAAYkB,GAA/CJ,EAHmB,EAGnBA,WAAYnD,EAHO,EAGPA,QAASC,EAHF,EAGEA,UACrBpB,EAAawD,YAAYjB,GAAzBvC,SAERyD,qBAAU,WACR1B,EDSF,uCAAO,WAAOA,GAAP,iBAAAC,EAAA,6DACLD,EAASwC,KADJ,kBAIoBtC,IAAMC,IAC3BC,+CALC,OAIGhC,EAJH,OAOGE,EAAOF,EAASE,KACtBE,QAAQC,IAAI,sBACZD,QAAQC,IAAIH,GACZ0B,EAASyC,EAAqBnE,IAV3B,kDAYHE,QAAQC,IAAR,MACAuB,EAAS0C,KAbN,0DAAP,yDCRG,CAAC1C,IAYJ,OACE,sBAAK8B,UAAWV,EAAQJ,KAAxB,UACG5B,GAAW,cAAC8C,EAAA,EAAD,KACV9C,IACCC,GACDkD,EAAWc,KAAI,SAAC/E,EAAMgF,GACpB,OACE,6BACE,cAACC,EAAA,EAAD,CACEC,MAAOlF,EACPyD,QAAS,kBApBH,SAACzD,GACfL,IAAaK,GACf0B,EAASM,EAAY,OACrBN,EAASD,EAAgB,SAEzBC,EAASM,EAAYhC,IACrB0B,EAASD,EAAgBzB,KAcAmF,CAAYnF,IAC3BoF,MAAOpF,IAASL,EAAW,UAAY,YACvC6D,UAAWV,EAAQ+B,QALdG,MAUdjE,GACC,cAAC8C,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,OAAlC,sC,UCrDFvB,GAAYC,aAAW,SAAC6B,GAAD,MAAY,CACvC5B,KAAM,CACJ,QAAS,CACPgC,OAAQJ,EAAMK,QAAQ,GACtBU,MAAQf,EAAMK,QAAQ,IACtBW,OAAQhB,EAAMK,QAAQ,SAoCbY,GA/BE,SAACC,GAChB,IAAM1C,EAAUN,KACVd,EAAWwB,cAFS,EAGWC,YAAYZ,GAAzC3C,EAHkB,EAGlBA,WAAYwC,EAHM,EAGNA,aAepB,OANAgB,qBAAU,WACHhB,GAAsC,IAAtBxC,EAAW0C,QAC9BZ,EAASD,EAAgB,KAAM7B,OAKjC,sBAAM4D,UAAWV,EAAQJ,KAAM+C,YAAU,EAACC,aAAa,MAAvD,SACE,cAACC,GAAA,EAAD,CACEC,MAAOxD,EACPyD,WAAYzD,EAAe,uBAAyB,GACpD0D,GAAG,iBACHZ,MAAM,wBACNa,SApBiB,SAACC,GACtBtE,EAASW,EAAc2D,EAAEC,OAAOhG,QAC5B+F,EAAEC,OAAOhG,MAAMqC,OAAS,GAC1BZ,EAASM,EAAY,aC3BrBQ,GAAYC,aAAW,SAAC6B,GAAD,sBAC1BA,EAAM4B,YAAYC,GAAG,MAAQ,CAC5BC,UAAW,CACTC,YAAa/B,EAAMK,QAAQ,SAiBlB2B,GAZM,SAACd,GACpB,IAAM1C,EAAUN,KAEhB,OACE,qBACEgB,UAAWV,EAAQsD,UACnBG,IAAKf,EAAMgB,MACXC,IAAI,2BClBK,OAA0B,kCCUnCjE,GAAYC,aAAW,SAAC6B,GAAD,MAAY,CACvCoC,OAAO,eACJpC,EAAM4B,YAAYC,GAAG,MAAQ,CAC5B5B,QAAS,OACTC,eAAgB,SAChBmC,WAAY,SACZC,QAAS,aAoBAC,GAfD,WACZ,IAAM/D,EAAUN,KAEhB,OACE,eAAC,IAAMsE,SAAP,WACE,eAACC,EAAA,EAAD,CAAKvD,UAAWV,EAAQ4D,OAAxB,UACE,cAAC,GAAD,CAAcF,MAAOQ,KACrB,cAAC,EAAD,OAEF,cAAC,GAAD,IACA,cAAC,GAAD,Q,SCJS1C,GAzBD2C,aAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,YAGVE,UAAW,CACTC,eAAgB,CACd,UAAW,CACTC,KAAM,CACJlC,OAAQ,QAEVmC,KAAM,CACJC,UAAW,SACXC,gBACE,gBCOGC,GAnBH,WACV,OACE,eAACC,EAAA,EAAD,CAAevD,MAAOA,GAAtB,UAOE,cAACwD,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,cAACjB,EAAA,EAAD,CAAKkB,GAAI,EAAT,SACE,cAAC,GAAD,Y,SCNKC,GAPKC,aAAgB,CAClCnH,KAAMoH,EACNnE,WAAYoE,GACZ1I,SAAU2I,EACV1I,WAAY2I,ICHRC,GAAQC,YAAe,CAAEC,QAASR,KAExCS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJM,SAASC,eAAe,W","file":"static/js/main.22656cc9.chunk.js","sourcesContent":["export const getPath = (category, searchText) => {\n  let path;\n\n  if (searchText != null) {\n    path = `/search?query=${searchText}`;\n  } else if (category == null) {\n    path = \"/random\";\n  } else {\n    path = `/random?category=${category}`;\n  }\n\n  return path;\n};\n\nexport const getData = (response) => {\n  if (response.data.value === undefined) {\n    console.log(response.data.total);\n    const randInt = Math.floor(Math.random() * response.data.total);\n    console.log(randInt);\n    return response.data.result[randInt].value;\n  }\n\n  return response.data.value;\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nimport { getPath, getData } from \"../util/utils\";\n\nexport const initialState = {\n  loading: false,\n  hasErrors: false,\n  joke: null,\n};\n\nconst jokesSlice = createSlice({\n  name: \"jokes\",\n  initialState,\n  reducers: {\n    setJokes: (state) => {\n      state.loading = true;\n    },\n    setJokesSuccess: (state, { payload }) => {\n      state.joke = payload;\n      state.loading = false;\n      state.hasErrors = false;\n    },\n    setJokesFailure: (state) => {\n      state.loading = false;\n      state.hasErrors = true;\n    },\n  },\n});\n\n// Actions generated from the slice\nexport const {\n  setJokes,\n  setJokesSuccess,\n  setJokesFailure,\n} = jokesSlice.actions;\n\n// Selector\nexport const jokesSelector = (state) => state.joke;\n\n// Reducer\nexport default jokesSlice.reducer;\n\n// Asynchronous thunk action\nexport const fetchRandomJoke = (category, searchText) => {\n  return async (dispatch) => {\n    dispatch(setJokes());\n\n    try {\n      const response = await axios.get(\n        process.env.REACT_APP_CHUCK_NORRIS_JOKES_API +\n          getPath(category, searchText)\n      );\n      console.log(response);\n      const data = getData(response);\n      console.log(\"fetchRandomJoke\");\n      dispatch(setJokesSuccess(data));\n    } catch (error) {\n      console.log(\"Error in fetch joke.\");\n      console.log(error);\n      dispatch(setJokesFailure());\n    }\n  };\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const initialState = {\n  category: null,\n};\n\nconst categorySlice = createSlice({\n  name: \"category\",\n  initialState,\n  reducers: {\n    setCategory: (state, action) => {\n      state.category = action.payload;\n    },\n  },\n});\n\n// Action generated from the slice\nexport const { setCategory } = categorySlice.actions;\n\n// Selector\nexport const categorySelector = (state) => state.category;\n\n// Reducer\nexport default categorySlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const initialState = {\n  searchText: \"\",\n  textTooShort: false,\n};\n\nconst searchTextSlice = createSlice({\n  name: \"searchText\",\n  initialState,\n  reducers: {\n    setSearchText: (state, action) => {\n      state.searchText = action.payload;\n      if (action.payload.length > 0 && action.payload.length < 3) {\n        state.textTooShort = true;\n      } else {\n        state.textTooShort = false;\n      }\n    },\n  },\n});\n\n// Action generated from the slice\nexport const { setSearchText } = searchTextSlice.actions;\n\n// Selector\nexport const searchTextSelector = (state) => state.searchText;\n\n// Reducer\nexport default searchTextSlice.reducer;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Paper, CircularProgress, Card, CardContent } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { fetchRandomJoke, jokesSelector } from \"../../shared/slices/joke\";\nimport { categorySelector } from \"../../shared/slices/category\";\nimport { searchTextSelector } from \"../../shared/slices/searchText\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    \"&:hover\": {\n      cursor: \"pointer\",\n    },\n  },\n});\n\nconst JokeCard = () => {\n  const classes = useStyles();\n  const [elevation, setElevation] = useState(0);\n  const dispatch = useDispatch();\n  const { joke, loading, hasErrors } = useSelector(jokesSelector);\n  const { category } = useSelector(categorySelector);\n  const { searchText } = useSelector(searchTextSelector);\n\n  useEffect(() => {\n    dispatch(fetchRandomJoke());\n  }, [dispatch]);\n\n  const handleOnMouseMove = () => {\n    setElevation(5);\n  };\n\n  const handleOnMouseOut = () => {\n    setElevation(0);\n  };\n\n  const handleOnClick = () => {\n    console.log(\"clicking paper\");\n    if (searchText.length !== 0) {\n      dispatch(fetchRandomJoke(category, searchText));\n    } else {\n      dispatch(fetchRandomJoke(category));\n    }\n  };\n\n  return (\n    <Paper\n      elevation={elevation}\n      onMouseMove={handleOnMouseMove}\n      onMouseOut={handleOnMouseOut}\n      className={classes.root}\n      onClick={handleOnClick}\n    >\n      <Card>\n        <CardContent>\n          {loading && <CircularProgress />}\n          {!loading && !hasErrors && (\n            <Typography variant=\"body1\" align=\"left\">\n              {joke}\n            </Typography>\n          )}\n          {hasErrors && (\n            <Typography variant=\"body1\" align=\"left\">\n              No joke with phrase \"<i>{searchText}</i>\" found.\n            </Typography>\n          )}\n        </CardContent>\n      </Card>\n    </Paper>\n  );\n};\n\nexport default JokeCard;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const initialState = {\n  loading: false,\n  hasErrors: false,\n  categories: [],\n};\n\nconst categoriesSlice = createSlice({\n  name: \"categories\",\n  initialState,\n  reducers: {\n    setCategories: (state) => {\n      state.loading = true;\n    },\n    setCategoriesSuccess: (state, { payload }) => {\n      state.categories = payload;\n      state.loading = false;\n      state.hasErrors = false;\n    },\n    setCategoriesFailure: (state) => {\n      state.loading = false;\n      state.hasErrors = true;\n    },\n  },\n});\n\n// Actions generated from the slice\nexport const {\n  setCategories,\n  setCategoriesSuccess,\n  setCategoriesFailure,\n} = categoriesSlice.actions;\n\n// Selector\nexport const categoriesSelector = (state) => state.categories;\n\n// Reducer\nexport default categoriesSlice.reducer;\n\n// Asynchronous thunk action\nexport function fetchCategories() {\n  return async (dispatch) => {\n    dispatch(setCategories());\n\n    try {\n      const response = await axios.get(\n        process.env.REACT_APP_CHUCK_NORRIS_JOKES_API + \"/categories\"\n      );\n      const data = response.data;\n      console.log(\"Fetched categories\");\n      console.log(data);\n      dispatch(setCategoriesSuccess(data));\n    } catch (error) {\n      console.log(error);\n      dispatch(setCategoriesFailure());\n    }\n  };\n}\n","import { React, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Chip, CircularProgress, Typography } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { fetchRandomJoke } from \"../../shared/slices/joke\";\nimport {\n  fetchCategories,\n  categoriesSelector,\n} from \"../../shared/slices/categories\";\nimport { setCategory, categorySelector } from \"../../shared/slices/category\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      margin: theme.spacing(0.5),\n    },\n    listStyle: \"none\",\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n  },\n}));\n\nconst JokeCategories = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { categories, loading, hasErrors } = useSelector(categoriesSelector);\n  const { category } = useSelector(categorySelector);\n\n  useEffect(() => {\n    dispatch(fetchCategories());\n  }, [dispatch]);\n\n  const handleClick = (data) => {\n    if (category === data) {\n      dispatch(setCategory(null));\n      dispatch(fetchRandomJoke(null));\n    } else {\n      dispatch(setCategory(data));\n      dispatch(fetchRandomJoke(data));\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      {loading && <CircularProgress />}\n      {!loading &&\n        !hasErrors &&\n        categories.map((data, index) => {\n          return (\n            <li key={index}>\n              <Chip\n                label={data}\n                onClick={() => handleClick(data)}\n                color={data === category ? \"primary\" : \"secondary\" }\n                className={classes.chip}\n              />\n            </li>\n          );\n        })}\n      {hasErrors && (\n        <Typography variant=\"body1\" align=\"left\">\n          No categories found.\n        </Typography>\n      )}\n    </div>\n  );\n};\n\nexport default JokeCategories;\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { fetchRandomJoke } from \"../../shared/slices/joke\";\nimport {\n  setSearchText,\n  searchTextSelector,\n} from \"../../shared/slices/searchText\";\nimport { setCategory } from \"../../shared/slices/category\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(3),\n      width:  theme.spacing(25),\n      height: theme.spacing(8)\n    },\n  },\n}));\n\nconst JokeForm = (props) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { searchText, textTooShort } = useSelector(searchTextSelector);\n\n  const handleOnChange = (e) => {\n    dispatch(setSearchText(e.target.value));\n    if (e.target.value.length > 0) {\n      dispatch(setCategory(null));\n    }\n  };\n\n  useEffect(() => {\n    if (!textTooShort && searchText.length !== 0) {\n      dispatch(fetchRandomJoke(null, searchText));\n    }\n  });\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <TextField\n        error={textTooShort}\n        helperText={textTooShort ? \"Phrase is too short.\" : \"\"}\n        id=\"standard-basic\"\n        label=\"Find joke with phrase\"\n        onChange={handleOnChange}\n      />\n    </form>\n  );\n};\n\nexport default JokeForm;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  [theme.breakpoints.up(\"sm\")]: {\n    container: {\n      marginRight: theme.spacing(4),\n    },\n  },\n}));\n\nconst ImgContainer = (props) => {\n  const classes = useStyles();\n\n  return (\n    <img\n      className={classes.container}\n      src={props.image}\n      alt=\"Chuck does not exist.\"\n    />\n  );\n};\n\nexport default ImgContainer;\n","export default __webpack_public_path__ + \"static/media/chuck.e03202fc.png\";","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box } from \"@material-ui/core\";\n\nimport JokeCard from \"../components/JokeCard\";\nimport JokeCategories from \"../components/JokeCategories\";\nimport JokeForm from \"../components/JokeForm\";\nimport ImgContainer from \"../../shared/components/UIElements/ImgContainer\";\nimport chuckImg from \"../../shared/assets/chuck.png\";\n\nconst useStyles = makeStyles((theme) => ({\n  boxPos: {\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      padding: \"20px\",\n    },\n  },\n}));\n\nconst Jokes = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Box className={classes.boxPos}>\n        <ImgContainer image={chuckImg} />\n        <JokeCard />\n      </Box>\n      <JokeForm />\n      <JokeCategories />\n    </React.Fragment>\n  );\n};\n\nexport default Jokes;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#004d40',\n    },\n    secondary: {\n      main: '#26a69a',\n    },\n  },\n  overrides: {\n    MuiCssBaseline: {\n      \"@global\": {\n        html: {\n          height: \"100%\",\n        },\n        body: {\n          textAlign: \"center\",\n          backgroundColor:\n            \"#ededed\",\n        },\n      },\n    },\n  },\n});\n\nexport default theme;\n","import { Box, Container } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n// import {Helmet} from 'react-helmet'\n\nimport Jokes from \"./jokes/pages/Jokes\";\nimport theme from \"./shared/themes/theme\";\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      {/* TODO: fix this */}\n      {/* <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>Chuck Norris - Jokes</title>\n          <link rel=\"canonical\" href=\"http://example.com\" />\n      </Helmet> */}\n      <CssBaseline />\n      <Container maxWidth=\"sm\">\n        <Box my={4}>\n          <Jokes />\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import { combineReducers } from \"redux\";\n\nimport jokeReducer from \"./joke\";\nimport categoriesReducer from \"./categories\";\nimport categoryReducer from \"./category\";\nimport searchTextReducer from \"./searchText\";\n\nconst rootReducer = combineReducers({\n  joke: jokeReducer,\n  categories: categoriesReducer,\n  category: categoryReducer,\n  searchText: searchTextReducer,\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App\";\nimport rootReducer from \"./shared/slices/index\";\n\nconst store = configureStore({ reducer: rootReducer });\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}